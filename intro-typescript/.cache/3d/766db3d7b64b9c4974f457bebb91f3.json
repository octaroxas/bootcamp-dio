{"id":"index.ts","dependencies":[{"name":"/Users/octaroxas/Documents/repositories/bootcamp-dio/intro-typescript/package.json","includedInParent":true,"mtime":1636061525621}],"generated":{"js":"/**dessa forma, definindo o tipo commo HTMLInputElement\n * podemos acessar os atributos dos inputs por exemplo e\n * fazer uso do autocomplete já que o editor já entende que\n * aquele elemento possui aquelas propriedades, value por exemplo\n */\nvar input = document.getElementById('input');\ninput.value;\ninput.addEventListener('input', function (event) {\n  var inputVal = event.currentTarget;\n  console.log(inputVal.value);\n}); // console.log('Running')\n// function sum(a: number, b: number) {\n//     return a + b\n// }\n// console.log(sum(5,3))\n// /** types e interfaces */\n// interface IAnimal {\n//     nome: string;\n//     tipo: 'terrestre' | 'aquatico';\n// }\n// const animal: IAnimal = {\n//     nome: 'Macaco',\n//     tipo: \"terrestre\"\n// }\n// interface Felino extends IAnimal {\n//     visaoNoturna: boolean;\n//     miar(intensidade: number): void;\n// }\n// const felino: Felino = {\n//     nome: 'Sif',\n//     tipo: 'terrestre',\n//     visaoNoturna: true,\n//     miar: (intens) => console.log(intens)\n// }\n// felino.miar(10)\n// /** Ao utilizar o type devemos utilizar a atribuição '=' antes de abrir e fechar as chaves\n//  * usados para fazer a junção de interfaces\n//  */\n// type A = IAnimal | Felino;\n// //Dessa forma o objeto ani podera conter as propriedades da interface IAnimal ou Felino\n// const ani: A = {\n//     nome: 'ann',\n//     tipo: \"aquatico\"\n// }"},"sourceMaps":{"js":{"mappings":[{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"index.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":6,"column":4}},{"source":"index.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":6,"column":9}},{"source":"index.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":6,"column":12}},{"source":"index.ts","name":null,"original":{"line":6,"column":22},"generated":{"line":6,"column":20}},{"source":"index.ts","name":null,"original":{"line":6,"column":23},"generated":{"line":6,"column":21}},{"source":"index.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":6,"column":35}},{"source":"index.ts","name":null,"original":{"line":6,"column":38},"generated":{"line":6,"column":36}},{"source":"index.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":6,"column":43}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":6,"column":44}},{"source":"index.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"index.ts","name":null,"original":{"line":7,"column":5},"generated":{"line":7,"column":5}},{"source":"index.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":7,"column":6}},{"source":"index.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":7,"column":11}},{"source":"index.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":8,"column":0}},{"source":"index.ts","name":null,"original":{"line":9,"column":5},"generated":{"line":8,"column":5}},{"source":"index.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":8,"column":6}},{"source":"index.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":8,"column":22}},{"source":"index.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":8,"column":23}},{"source":"index.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":8,"column":30}},{"source":"index.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":8,"column":32}},{"source":"index.ts","name":null,"original":{"line":9,"column":33},"generated":{"line":8,"column":42}},{"source":"index.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":8,"column":47}},{"source":"index.ts","name":null,"original":{"line":9,"column":38},"generated":{"line":8,"column":49}},{"source":"index.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":9,"column":0}},{"source":"index.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":9,"column":6}},{"source":"index.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":9,"column":14}},{"source":"index.ts","name":null,"original":{"line":10,"column":21},"generated":{"line":9,"column":17}},{"source":"index.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":9,"column":22}},{"source":"index.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":9,"column":23}},{"source":"index.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":9,"column":36}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":10,"column":0}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":10,"column":2}},{"source":"index.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":10,"column":9}},{"source":"index.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":10,"column":10}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":10,"column":13}},{"source":"index.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":10,"column":14}},{"source":"index.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":10,"column":22}},{"source":"index.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":10,"column":23}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":10,"column":28}},{"source":"index.ts","name":null,"original":{"line":12,"column":1},"generated":{"line":11,"column":0}},{"source":"index.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":11,"column":1}},{"source":"index.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":11,"column":4}},{"source":"index.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":12,"column":0}},{"source":"index.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":13,"column":0}},{"source":"index.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":14,"column":0}},{"source":"index.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":15,"column":0}},{"source":"index.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":16,"column":0}},{"source":"index.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":17,"column":0}},{"source":"index.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":18,"column":0}},{"source":"index.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":19,"column":0}},{"source":"index.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":20,"column":0}},{"source":"index.ts","name":null,"original":{"line":56,"column":0},"generated":{"line":21,"column":0}},{"source":"index.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":22,"column":0}},{"source":"index.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":23,"column":0}},{"source":"index.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":24,"column":0}},{"source":"index.ts","name":null,"original":{"line":61,"column":0},"generated":{"line":25,"column":0}},{"source":"index.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":26,"column":0}},{"source":"index.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":27,"column":0}},{"source":"index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":28,"column":0}},{"source":"index.ts","name":null,"original":{"line":66,"column":0},"generated":{"line":29,"column":0}},{"source":"index.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":30,"column":0}},{"source":"index.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":31,"column":0}},{"source":"index.ts","name":null,"original":{"line":69,"column":0},"generated":{"line":32,"column":0}},{"source":"index.ts","name":null,"original":{"line":70,"column":0},"generated":{"line":33,"column":0}},{"source":"index.ts","name":null,"original":{"line":71,"column":0},"generated":{"line":34,"column":0}},{"source":"index.ts","name":null,"original":{"line":73,"column":0},"generated":{"line":35,"column":0}},{"source":"index.ts","name":null,"original":{"line":75,"column":0},"generated":{"line":36,"column":0}},{"source":"index.ts","name":null,"original":{"line":76,"column":0},"generated":{"line":37,"column":0}},{"source":"index.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":38,"column":0}},{"source":"index.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":39,"column":0}},{"source":"index.ts","name":null,"original":{"line":81,"column":0},"generated":{"line":40,"column":0}},{"source":"index.ts","name":null,"original":{"line":82,"column":0},"generated":{"line":41,"column":0}},{"source":"index.ts","name":null,"original":{"line":83,"column":0},"generated":{"line":42,"column":0}},{"source":"index.ts","name":null,"original":{"line":84,"column":0},"generated":{"line":43,"column":0}},{"source":"index.ts","name":null,"original":{"line":85,"column":0},"generated":{"line":44,"column":0}}],"sources":{"index.ts":"/**dessa forma, definindo o tipo commo HTMLInputElement\n * podemos acessar os atributos dos inputs por exemplo e\n * fazer uso do autocomplete já que o editor já entende que \n * aquele elemento possui aquelas propriedades, value por exemplo\n */\nconst input = document.getElementById('input') as HTMLInputElement;\ninput.value;\n\ninput.addEventListener('input', (event) => {\n    const inputVal = event.currentTarget as HTMLInputElement;\n    console.log(inputVal.value)\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// console.log('Running')\n\n// function sum(a: number, b: number) {\n//     return a + b\n// }\n\n// console.log(sum(5,3))\n\n// /** types e interfaces */\n\n// interface IAnimal {\n//     nome: string;\n//     tipo: 'terrestre' | 'aquatico';\n// }\n\n// const animal: IAnimal = {\n//     nome: 'Macaco',\n//     tipo: \"terrestre\"\n// }\n\n// interface Felino extends IAnimal {\n//     visaoNoturna: boolean;\n//     miar(intensidade: number): void;\n// }\n\n// const felino: Felino = {\n//     nome: 'Sif',\n//     tipo: 'terrestre',\n//     visaoNoturna: true,\n//     miar: (intens) => console.log(intens)\n// }\n\n// felino.miar(10)\n\n// /** Ao utilizar o type devemos utilizar a atribuição '=' antes de abrir e fechar as chaves\n//  * usados para fazer a junção de interfaces\n//  */\n\n// type A = IAnimal | Felino;\n\n// //Dessa forma o objeto ani podera conter as propriedades da interface IAnimal ou Felino\n// const ani: A = {\n//     nome: 'ann',\n//     tipo: \"aquatico\"\n// }"},"lineCount":null}},"error":null,"hash":"e1039de92dcb8deff32dc305e5e5b79c","cacheData":{"env":{}}}